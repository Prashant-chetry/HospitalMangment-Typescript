{"ast":null,"code":"var _jsxFileName = \"/home/prashant/personal/hospitalManagment/client/src/components/auth/SignUp.tsx\";\nimport React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Grid } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport * as Yup from 'yup';\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email('please enter an email').required('required'),\n  password: Yup.string().required('required').min(6),\n  reTypePassword: Yup.string().required('required').min(6)\n});\n\nconst hSubmit = function () {};\n\nconst SignUpForm = function () {\n  const initialValues = {\n    email: '',\n    password: '',\n    reTypePassword: '',\n    showPassword: false,\n    showRetypePassword: false\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: () => console.log(''),\n    validationSchema: validationSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, ({\n    values,\n    setFieldValue\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    justify: \"center\",\n    spacing: 3,\n    style: {\n      padding: '3rem 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"email\",\n    type: \"email\",\n    variant: \"outlined\",\n    label: \"Email :\",\n    required: true,\n    fullWidth: true,\n    as: TextField,\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(AccountCircle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"password\",\n    type: values.showRetypePassword ? 'text' : 'password',\n    variant: \"outlined\",\n    label: \"Password :\",\n    required: true,\n    fullWidth: true,\n    as: TextField,\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: () => {\n          setFieldValue('showPassword', !values.showPassword);\n        },\n        edge: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }, values.showPassword ? /*#__PURE__*/React.createElement(Visibility, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 50\n        }\n      }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 67\n        }\n      })))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"reTypePassword\",\n    type: values.showRetypePassword ? 'text' : 'password',\n    variant: \"outlined\",\n    label: \"ReTypePassword :\",\n    required: true,\n    fullWidth: true,\n    as: TextField,\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: () => {\n          setFieldValue('showRetypePassword', !values.showRetypePassword);\n        },\n        edge: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }\n      }, values.showRetypePassword ? /*#__PURE__*/React.createElement(Visibility, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 56\n        }\n      }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 73\n        }\n      })))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    style: {\n      padding: '2rem 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, \"Submit\"))))));\n};\n\nexport default SignUpForm;","map":{"version":3,"sources":["/home/prashant/personal/hospitalManagment/client/src/components/auth/SignUp.tsx"],"names":["React","Formik","Form","Field","TextField","InputAdornment","AccountCircle","Visibility","VisibilityOff","IconButton","Grid","Button","Yup","validationSchema","object","shape","email","string","required","password","min","reTypePassword","hSubmit","SignUpForm","initialValues","showPassword","showRetypePassword","console","log","values","setFieldValue","padding","width","startAdornment","endAdornment"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik, FormikHelpers, FormikProps, Form, Field, FieldProps } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Grid } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport * as Yup from 'yup';\n\ninterface FormikValue {\n  email: string;\n  password: string;\n  reTypePassword: string;\n  showPassword: boolean;\n  showRetypePassword: boolean;\n}\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email('please enter an email').required('required'),\n  password: Yup.string().required('required').min(6),\n  reTypePassword: Yup.string().required('required').min(6),\n});\n\nconst hSubmit = function () {};\nconst SignUpForm: React.FC<{}> = function () {\n  const initialValues: FormikValue = {\n    email: '',\n    password: '',\n    reTypePassword: '',\n    showPassword: false,\n    showRetypePassword: false,\n  };\n  return (\n    <>\n      <Formik initialValues={initialValues} onSubmit={() => console.log('')} validationSchema={validationSchema}>\n        {({ values, setFieldValue }) => (\n          <Form>\n            <Grid\n              container\n              direction=\"column\"\n              alignItems=\"center\"\n              justify=\"center\"\n              spacing={3}\n              style={{ padding: '3rem 0' }}\n            >\n              <Grid item xs={3} style={{ width: '100%' }}>\n                <Field\n                  name=\"email\"\n                  type=\"email\"\n                  variant=\"outlined\"\n                  label=\"Email :\"\n                  required\n                  fullWidth\n                  as={TextField}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <AccountCircle />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item xs={3} style={{ width: '100%' }}>\n                <Field\n                  name=\"password\"\n                  type={values.showRetypePassword ? 'text' : 'password'}\n                  variant=\"outlined\"\n                  label=\"Password :\"\n                  required\n                  fullWidth\n                  as={TextField}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"toggle password visibility\"\n                          onClick={() => {\n                            setFieldValue('showPassword', !values.showPassword);\n                          }}\n                          edge=\"end\"\n                        >\n                          {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item xs={3} style={{ width: '100%' }}>\n                <Field\n                  name=\"reTypePassword\"\n                  type={values.showRetypePassword ? 'text' : 'password'}\n                  variant=\"outlined\"\n                  label=\"ReTypePassword :\"\n                  required\n                  fullWidth\n                  as={TextField}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"toggle password visibility\"\n                          onClick={(): void => {\n                            setFieldValue('showRetypePassword', !values.showRetypePassword);\n                          }}\n                          edge=\"end\"\n                        >\n                          {values.showRetypePassword ? <Visibility /> : <VisibilityOff />}\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n            </Grid>\n            <Grid container justify=\"center\" style={{ padding: '2rem 0' }}>\n              <Grid item>\n                <Button type=\"submit\" color=\"primary\" variant=\"contained\">\n                  Submit\n                </Button>\n              </Grid>\n            </Grid>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default SignUpForm;\n"]},"metadata":{},"sourceType":"module"}