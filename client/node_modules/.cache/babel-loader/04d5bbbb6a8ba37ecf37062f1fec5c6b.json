{"ast":null,"code":"var _jsxFileName = \"/home/prashant/personal/hospitalManagment/client/src/components/user/Edit.tsx\";\n\n/* eslint-disable @typescript-eslint/interface-name-prefix */\nimport React, { useEffect, useState } from 'react';\nimport { Formik, Form, Field, FieldArray } from 'formik';\nimport { TextField, MenuItem, IconButton, InputAdornment, Grid, Button } from '@material-ui/core';\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded';\nimport RemoveCircleRoundedIcon from '@material-ui/icons/RemoveCircleRounded';\nimport AddCircleRoundedIcon from '@material-ui/icons/AddCircleRounded';\nimport isEmpty from '../../common/isEmpty';\nconst genderOption = [{\n  code: 'f',\n  label: 'Female'\n}, {\n  code: 'm',\n  label: 'Male'\n}];\nconst maritalStatusOption = [{\n  code: 's',\n  label: 'Single'\n}, {\n  code: 'm',\n  label: 'Married'\n}];\n\nconst hSubmit = async function (values, setSubmitting, userId) {\n  if (!Object.keys(values).length || !userId) {\n    setSubmitting(false);\n    return;\n  }\n\n  try {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(values)\n    };\n    await fetch(`http://localhost:8080/api/user/edit/${userId}`, options);\n  } catch (error) {\n    console.error('error');\n  }\n};\n\nconst EditUserProfile = function () {\n  var _userInfo$profile, _userInfo$profile$nam, _userInfo$profile2, _userInfo$profile2$na, _userInfo$profile3, _userInfo$profile3$na, _userInfo$profile4, _userInfo$emails, _userInfo$phones;\n\n  const [userId, setUserId] = useState(window.localStorage.getItem('HS_userId') || undefined);\n  const [userInfo, setUserInfo] = useState(undefined);\n  useEffect(() => {\n    if (userId) {\n      const fetchData = async function () {\n        const requestHeader = new Headers();\n        requestHeader.set('Content-Type', 'application/json');\n        requestHeader.set('authorization', window.localStorage.getItem('accessToken-HM') || '');\n        const resp = await (await fetch(`http://localhost:8080/api/user/profile/${userId}`, {\n          method: 'GET',\n          headers: requestHeader\n        })).json();\n        console.log(resp);\n\n        if (!resp.success) {\n          console.log('error', resp.message);\n        } else setUserInfo(resp.data);\n      };\n\n      fetchData();\n    }\n  }, [userId]);\n  if (isEmpty(userInfo || {})) return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 39\n    }\n  }, \"Loading...\");\n  const initialValues = {\n    name: {\n      first: (userInfo === null || userInfo === void 0 ? void 0 : (_userInfo$profile = userInfo.profile) === null || _userInfo$profile === void 0 ? void 0 : (_userInfo$profile$nam = _userInfo$profile.name) === null || _userInfo$profile$nam === void 0 ? void 0 : _userInfo$profile$nam.first) || '',\n      last: (userInfo === null || userInfo === void 0 ? void 0 : (_userInfo$profile2 = userInfo.profile) === null || _userInfo$profile2 === void 0 ? void 0 : (_userInfo$profile2$na = _userInfo$profile2.name) === null || _userInfo$profile2$na === void 0 ? void 0 : _userInfo$profile2$na.last) || '',\n      middle: (userInfo === null || userInfo === void 0 ? void 0 : (_userInfo$profile3 = userInfo.profile) === null || _userInfo$profile3 === void 0 ? void 0 : (_userInfo$profile3$na = _userInfo$profile3.name) === null || _userInfo$profile3$na === void 0 ? void 0 : _userInfo$profile3$na.middle) || ''\n    },\n    gender: (userInfo === null || userInfo === void 0 ? void 0 : (_userInfo$profile4 = userInfo.profile) === null || _userInfo$profile4 === void 0 ? void 0 : _userInfo$profile4.gender) || '',\n    emails: ((_userInfo$emails = userInfo.emails) === null || _userInfo$emails === void 0 ? void 0 : _userInfo$emails.map(e => e.address)) || [''],\n    mobileNos: ((_userInfo$phones = userInfo.phones) === null || _userInfo$phones === void 0 ? void 0 : _userInfo$phones.map(e => e.number)) || [''],\n    dob: '',\n    maritalStatus: '',\n    aadharNo: '',\n    panid: ''\n  };\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: (values, {\n      setSubmitting\n    }) => hSubmit(values, setSubmitting, userId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, ({\n    values,\n    setFieldValue,\n    dirty,\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    spacing: 3,\n    style: {\n      marginTop: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"center\",\n    spacing: 3,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"name.first\",\n    label: \"First Name :\",\n    variant: \"outlined\",\n    fullWidth: true,\n    as: TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"name.middle\",\n    label: \"Middle Name :\",\n    variant: \"outlined\",\n    fullWidth: true,\n    as: TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"name.last\",\n    label: \"Last Name :\",\n    variant: \"outlined\",\n    fullWidth: true,\n    as: TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"center\",\n    spacing: 3,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    select: true,\n    name: \"gender\",\n    label: \"Gender :\",\n    variant: \"outlined\",\n    fullWidth: true,\n    as: TextField,\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => {\n          setFieldValue('gender', '');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CancelRoundedIcon, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 27\n        }\n      })))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, genderOption.map(g => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: g.code,\n      value: g.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 23\n      }\n    }, g.label);\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    select: true,\n    name: \"maritalStatus\",\n    label: \"Marital Status :\",\n    variant: \"outlined\",\n    fullWidth: true,\n    as: TextField,\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => {\n          setFieldValue('maritalStatus', '');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CancelRoundedIcon, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 27\n        }\n      })))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, maritalStatusOption.map(g => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: g.code,\n      value: g.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 23\n      }\n    }, g.label);\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"aadharNo\",\n    type: \"text\",\n    label: \"Aadhar No :\",\n    variant: \"outlined\",\n    fullWidth: true,\n    as: TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"center\",\n    spacing: 3,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"date\",\n    name: \"dob\",\n    label: \"Dob: \",\n    variant: \"outlined\",\n    fullWidth: true,\n    as: TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FieldArray, {\n    name: \"emails\",\n    render: ({\n      push,\n      remove\n    }) => {\n      return values.emails.map((el, ind) => /*#__PURE__*/React.createElement(Field, {\n        key: ind,\n        type: \"email\",\n        label: ind === 0 ? 'Emails : ' : '',\n        name: `emails.${ind}`,\n        variant: \"outlined\",\n        fullWidth: true,\n        as: TextField,\n        InputProps: {\n          endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"end\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(IconButton, {\n            onClick: () => {\n              push('');\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(AddCircleRoundedIcon, {\n            color: \"primary\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 33\n            }\n          })), values.emails.length > 1 && /*#__PURE__*/React.createElement(IconButton, {\n            onClick: () => {\n              remove(ind);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(RemoveCircleRoundedIcon, {\n            color: \"primary\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 35\n            }\n          })))\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 23\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FieldArray, {\n    name: \"mobileNos\",\n    render: ({\n      push,\n      remove\n    }) => {\n      return values.mobileNos.map((el, ind) => /*#__PURE__*/React.createElement(Field, {\n        key: ind,\n        type: \"text\",\n        label: ind === 0 ? 'Phones : ' : '',\n        name: `mobileNos.${ind}`,\n        variant: \"outlined\",\n        fullWidth: true,\n        as: TextField,\n        InputProps: {\n          endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"end\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(IconButton, {\n            onClick: () => {\n              push('');\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(AddCircleRoundedIcon, {\n            color: \"primary\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 33\n            }\n          })), values.mobileNos.length > 1 && /*#__PURE__*/React.createElement(IconButton, {\n            onClick: () => {\n              remove(ind);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(RemoveCircleRoundedIcon, {\n            color: \"primary\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 35\n            }\n          })))\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 23\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"center\",\n    spacing: 3,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"aadharNo\",\n    type: \"text\",\n    label: \"Aadhar No :\",\n    variant: \"outlined\",\n    fullWidth: true,\n    as: TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"center\",\n    spacing: 3,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: !dirty || isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 15\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }, JSON.stringify(values))));\n};\n\nexport default EditUserProfile;","map":{"version":3,"sources":["/home/prashant/personal/hospitalManagment/client/src/components/user/Edit.tsx"],"names":["React","useEffect","useState","Formik","Form","Field","FieldArray","TextField","MenuItem","IconButton","InputAdornment","Grid","Button","CancelRoundedIcon","RemoveCircleRoundedIcon","AddCircleRoundedIcon","isEmpty","genderOption","code","label","maritalStatusOption","hSubmit","values","setSubmitting","userId","Object","keys","length","options","method","headers","body","JSON","stringify","fetch","error","console","EditUserProfile","setUserId","window","localStorage","getItem","undefined","userInfo","setUserInfo","fetchData","requestHeader","Headers","set","resp","json","log","success","message","data","initialValues","name","first","profile","last","middle","gender","emails","map","e","address","mobileNos","phones","number","dob","maritalStatus","aadharNo","panid","setFieldValue","dirty","isSubmitting","marginTop","endAdornment","g","push","remove","el","ind"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/interface-name-prefix */\nimport React, { useEffect, useState } from 'react';\nimport { Formik, Form, Field, FieldArray } from 'formik';\nimport { TextField, MenuItem, IconButton, InputAdornment, Grid, Button } from '@material-ui/core';\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded';\nimport RemoveCircleRoundedIcon from '@material-ui/icons/RemoveCircleRounded';\nimport AddCircleRoundedIcon from '@material-ui/icons/AddCircleRounded';\nimport isEmpty from '../../common/isEmpty';\ninterface IInitialValues {\n  name: {\n    first: string;\n    last: string;\n    middle: string;\n  };\n  gender: string;\n  emails: Array<string>;\n  mobileNos: Array<string>;\n  dob: string;\n  maritalStatus: string;\n  aadharNo: string;\n  panid: string;\n}\ninterface IOption {\n  code: string;\n  label: string;\n}\nconst genderOption: Array<IOption> = [\n  { code: 'f', label: 'Female' },\n  { code: 'm', label: 'Male' },\n];\nconst maritalStatusOption: Array<IOption> = [\n  { code: 's', label: 'Single' },\n  { code: 'm', label: 'Married' },\n];\nconst hSubmit = async function (\n  values: IInitialValues,\n  setSubmitting: (isSubmitting: boolean) => void,\n  userId: string | undefined,\n): Promise<void> {\n  if (!Object.keys(values).length || !userId) {\n    setSubmitting(false);\n    return;\n  }\n  try {\n    const options: {\n      method: string;\n      headers: {\n        'Content-Type': string;\n      };\n      body: string;\n    } = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(values),\n    };\n    await fetch(`http://localhost:8080/api/user/edit/${userId}`, options);\n  } catch (error) {\n    console.error('error');\n  }\n};\nconst EditUserProfile: React.FC = function () {\n  const [userId, setUserId] = useState<undefined | string>(window.localStorage.getItem('HS_userId') || undefined);\n  const [userInfo, setUserInfo] = useState<any | undefined>(undefined);\n  useEffect(() => {\n    if (userId) {\n      const fetchData = async function (): Promise<void> {\n        const requestHeader = new Headers();\n        requestHeader.set('Content-Type', 'application/json');\n        requestHeader.set('authorization', window.localStorage.getItem('accessToken-HM') || '');\n        const resp = await (\n          await fetch(`http://localhost:8080/api/user/profile/${userId}`, {\n            method: 'GET',\n            headers: requestHeader,\n          })\n        ).json();\n        console.log(resp);\n        if (!resp.success) {\n          console.log('error', resp.message);\n        } else setUserInfo(resp.data);\n      };\n      fetchData();\n    }\n  }, [userId]);\n  if (isEmpty(userInfo || {})) return <span>Loading...</span>;\n  const initialValues: IInitialValues = {\n    name: {\n      first: userInfo?.profile?.name?.first || '',\n      last: userInfo?.profile?.name?.last || '',\n      middle: userInfo?.profile?.name?.middle || '',\n    },\n    gender: userInfo?.profile?.gender || '',\n    emails: userInfo.emails?.map((e: any) => e.address) || [''],\n    mobileNos: userInfo.phones?.map((e: any) => e.number) || [''],\n    dob: '',\n    maritalStatus: '',\n    aadharNo: '',\n    panid: '',\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values, { setSubmitting }) => hSubmit(values, setSubmitting, userId)}\n    >\n      {({ values, setFieldValue, dirty, isSubmitting }) => (\n        <Form>\n          <Grid container direction=\"column\" spacing={3} style={{ marginTop: '2rem' }}>\n            <Grid item container justify=\"center\" spacing={3} xs={12}>\n              <Grid item xs={3}>\n                <Field type=\"text\" name=\"name.first\" label=\"First Name :\" variant=\"outlined\" fullWidth as={TextField} />\n              </Grid>\n              <Grid item xs={3}>\n                <Field\n                  type=\"text\"\n                  name=\"name.middle\"\n                  label=\"Middle Name :\"\n                  variant=\"outlined\"\n                  fullWidth\n                  as={TextField}\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <Field type=\"text\" name=\"name.last\" label=\"Last Name :\" variant=\"outlined\" fullWidth as={TextField} />\n              </Grid>\n            </Grid>\n            <Grid item container justify=\"center\" spacing={3} xs={12}>\n              <Grid item xs={3}>\n                <Field\n                  select\n                  name=\"gender\"\n                  label=\"Gender :\"\n                  variant=\"outlined\"\n                  fullWidth\n                  as={TextField}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          onClick={(): void => {\n                            setFieldValue('gender', '');\n                          }}\n                        >\n                          <CancelRoundedIcon color=\"primary\" />\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                >\n                  {genderOption.map((g) => {\n                    return (\n                      <MenuItem key={g.code} value={g.code}>\n                        {g.label}\n                      </MenuItem>\n                    );\n                  })}\n                </Field>\n              </Grid>\n              <Grid item xs={3}>\n                <Field\n                  select\n                  name=\"maritalStatus\"\n                  label=\"Marital Status :\"\n                  variant=\"outlined\"\n                  fullWidth\n                  as={TextField}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          onClick={(): void => {\n                            setFieldValue('maritalStatus', '');\n                          }}\n                        >\n                          <CancelRoundedIcon color=\"primary\" />\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                >\n                  {maritalStatusOption.map((g) => {\n                    return (\n                      <MenuItem key={g.code} value={g.code}>\n                        {g.label}\n                      </MenuItem>\n                    );\n                  })}\n                </Field>\n              </Grid>\n              <Grid item xs={3}>\n                <Field name=\"aadharNo\" type=\"text\" label=\"Aadhar No :\" variant=\"outlined\" fullWidth as={TextField} />\n              </Grid>\n            </Grid>\n            <Grid item container justify=\"center\" spacing={3} xs={12}>\n              <Grid item xs={3}>\n                <Field type=\"date\" name=\"dob\" label=\"Dob: \" variant=\"outlined\" fullWidth as={TextField} />\n              </Grid>\n              <Grid item xs={3}>\n                <FieldArray\n                  name=\"emails\"\n                  render={({ push, remove }): React.ReactNode => {\n                    return values.emails.map((el, ind) => (\n                      <Field\n                        key={ind}\n                        type=\"email\"\n                        label={ind === 0 ? 'Emails : ' : ''}\n                        name={`emails.${ind}`}\n                        variant=\"outlined\"\n                        fullWidth\n                        as={TextField}\n                        InputProps={{\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <IconButton\n                                onClick={(): void => {\n                                  push('');\n                                }}\n                              >\n                                <AddCircleRoundedIcon color=\"primary\" />\n                              </IconButton>\n                              {values.emails.length > 1 && (\n                                <IconButton\n                                  onClick={(): void => {\n                                    remove(ind);\n                                  }}\n                                >\n                                  <RemoveCircleRoundedIcon color=\"primary\" />\n                                </IconButton>\n                              )}\n                            </InputAdornment>\n                          ),\n                        }}\n                      />\n                    ));\n                  }}\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <FieldArray\n                  name=\"mobileNos\"\n                  render={({ push, remove }): React.ReactNode => {\n                    return values.mobileNos.map((el, ind) => (\n                      <Field\n                        key={ind}\n                        type=\"text\"\n                        label={ind === 0 ? 'Phones : ' : ''}\n                        name={`mobileNos.${ind}`}\n                        variant=\"outlined\"\n                        fullWidth\n                        as={TextField}\n                        InputProps={{\n                          endAdornment: (\n                            <InputAdornment position=\"end\">\n                              <IconButton\n                                onClick={(): void => {\n                                  push('');\n                                }}\n                              >\n                                <AddCircleRoundedIcon color=\"primary\" />\n                              </IconButton>\n                              {values.mobileNos.length > 1 && (\n                                <IconButton\n                                  onClick={(): void => {\n                                    remove(ind);\n                                  }}\n                                >\n                                  <RemoveCircleRoundedIcon color=\"primary\" />\n                                </IconButton>\n                              )}\n                            </InputAdornment>\n                          ),\n                        }}\n                      />\n                    ));\n                  }}\n                />\n              </Grid>\n            </Grid>\n            <Grid item container justify=\"center\" spacing={3} xs={12}>\n              <Grid item xs={3}>\n                <Field name=\"aadharNo\" type=\"text\" label=\"Aadhar No :\" variant=\"outlined\" fullWidth as={TextField} />\n              </Grid>\n            </Grid>\n            <Grid item container justify=\"center\" spacing={3} xs={12}>\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={!dirty || isSubmitting}>\n                Submit\n              </Button>\n            </Grid>\n          </Grid>\n          <pre>{JSON.stringify(values)}</pre>\n        </Form>\n      )}\n    </Formik>\n  );\n};\nexport default EditUserProfile;\n"]},"metadata":{},"sourceType":"module"}