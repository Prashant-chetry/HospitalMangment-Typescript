{"ast":null,"code":"var _jsxFileName = \"/home/prashant/personal/hospitalManagment/client/src/components/auth/SignUp.tsx\";\nimport React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Grid } from '@material-ui/core';\n\nconst SignUpForm = function () {\n  const initialValues = {\n    email: '',\n    password: '',\n    reTypePassword: '',\n    showPassword: false,\n    showRetypePassword: false\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: () => console.log(''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, ({\n    values,\n    setFieldValue\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"email\",\n    type: \"email\",\n    variant: \"outlined\",\n    label: \"Email :\",\n    required: true,\n    fullWidth: true,\n    as: TextField,\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(AccountCircle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 23\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"password\",\n    type: \"password\",\n    variant: \"outlined\",\n    label: \"Password :\",\n    required: true,\n    fullWidth: true,\n    as: TextField,\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: () => {\n          setFieldValue('showPassword', !values.showPassword);\n        } // onMouseDown={handleMouseDownPassword}\n        ,\n        edge: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 23\n        }\n      }, values.showPassword ? /*#__PURE__*/React.createElement(Visibility, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 48\n        }\n      }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 65\n        }\n      })))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"reTypePassword\",\n    type: \"password\",\n    variant: \"outlined\",\n    label: \"ReTypePassword :\",\n    required: true,\n    fullWidth: true,\n    as: TextField,\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: () => {\n          setFieldValue('showRetypePassword', !values.showRetypePassword);\n        } // onMouseDown={handleMouseDownPassword}\n        ,\n        edge: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 23\n        }\n      }, values.showPassword ? /*#__PURE__*/React.createElement(Visibility, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 48\n        }\n      }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 65\n        }\n      })))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default SignUpForm;","map":{"version":3,"sources":["/home/prashant/personal/hospitalManagment/client/src/components/auth/SignUp.tsx"],"names":["React","Formik","Form","Field","TextField","InputAdornment","AccountCircle","Visibility","VisibilityOff","IconButton","Grid","SignUpForm","initialValues","email","password","reTypePassword","showPassword","showRetypePassword","console","log","values","setFieldValue","startAdornment","endAdornment"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik, FormikHelpers, FormikProps, Form, Field, FieldProps } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Grid } from '@material-ui/core';\n\nconst SignUpForm: React.FC<{}> = function () {\n  const initialValues = {\n    email: '',\n    password: '',\n    reTypePassword: '',\n    showPassword: false,\n    showRetypePassword: false,\n  };\n  return (\n    <>\n      <Formik initialValues={initialValues} onSubmit={() => console.log('')}>\n        {({ values, setFieldValue }) => (\n          <Form>\n            <Grid container>\n              <Field\n                name=\"email\"\n                type=\"email\"\n                variant=\"outlined\"\n                label=\"Email :\"\n                required\n                fullWidth\n                as={TextField}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <AccountCircle />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              <Field\n                name=\"password\"\n                type=\"password\"\n                variant=\"outlined\"\n                label=\"Password :\"\n                required\n                fullWidth\n                as={TextField}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={() => {\n                          setFieldValue('showPassword', !values.showPassword);\n                        }}\n                        // onMouseDown={handleMouseDownPassword}\n                        edge=\"end\"\n                      >\n                        {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              <Field\n                name=\"reTypePassword\"\n                type=\"password\"\n                variant=\"outlined\"\n                label=\"ReTypePassword :\"\n                required\n                fullWidth\n                as={TextField}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={() => {\n                          setFieldValue('showRetypePassword', !values.showRetypePassword);\n                        }}\n                        // onMouseDown={handleMouseDownPassword}\n                        edge=\"end\"\n                      >\n                        {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default SignUpForm;\n"]},"metadata":{},"sourceType":"module"}