{"ast":null,"code":"var _jsxFileName = \"/home/prashant/personal/hospitalManagment/client/src/components/user/Edit.tsx\";\n\n/* eslint-disable @typescript-eslint/interface-name-prefix */\nimport React from 'react';\nimport { Formik, Form, Field, FieldArray } from 'formik';\nimport { TextField, MenuItem, IconButton, InputAdornment } from '@material-ui/core';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport RemoveCircleRoundedIcon from '@material-ui/icons/RemoveCircleRounded';\nimport AddCircleRoundedIcon from '@material-ui/icons/AddCircleRounded';\nconst genderOption = [{\n  code: 'f',\n  label: 'Female'\n}, {\n  code: 'm',\n  label: 'Male'\n}];\nconst maritalStatusOption = [{\n  code: 's',\n  label: 'Single'\n}, {\n  code: 'm',\n  label: 'Married'\n}];\n\nconst EditUserProfile = function () {\n  const initialValues = {\n    name: {\n      first: '',\n      last: '',\n      middle: ''\n    },\n    gender: '',\n    emails: [''],\n    phones: [''],\n    dob: '',\n    maritalStatus: ''\n  };\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: () => console.log('submitted'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, ({\n    values,\n    setSubmitting,\n    setFieldValue\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"name.first\",\n    label: \"First Name :\",\n    variant: \"outlined\",\n    fullWidth: true,\n    as: TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"name.middle\",\n    label: \"Middle Name :\",\n    variant: \"outlined\",\n    fullWidth: true,\n    as: TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"name.last\",\n    label: \"Last Name :\",\n    variant: \"outlined\",\n    fullWidth: true,\n    as: TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FieldArray, {\n    name: \"emails\",\n    render: ({\n      push,\n      remove\n    }) => {\n      return values.emails.map((el, ind) => /*#__PURE__*/React.createElement(Field, {\n        key: ind,\n        type: \"email\",\n        label: ind === 0 ? 'Emails : ' : '',\n        name: `emails.${ind}`,\n        variant: \"outlined\",\n        fullWidth: true,\n        as: TextField,\n        InputProps: {\n          endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"end\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(IconButton, {\n            onClick: () => {\n              push('');\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(AddCircleRoundedIcon, {\n            color: \"primary\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 27\n            }\n          })), values.emails.length > 1 && /*#__PURE__*/React.createElement(IconButton, {\n            onClick: () => {\n              remove(ind);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 27\n            }\n          }, /*#__PURE__*/React.createElement(RemoveCircleRoundedIcon, {\n            color: \"primary\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }\n          })))\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FieldArray, {\n    name: \"phones\",\n    render: ({\n      push,\n      remove\n    }) => {\n      return values.emails.map((el, ind) => /*#__PURE__*/React.createElement(Field, {\n        key: ind,\n        type: \"text\",\n        label: ind === 0 ? 'Phones : ' : '',\n        name: `phones.${ind}`,\n        variant: \"outlined\",\n        fullWidth: true,\n        as: TextField,\n        InputProps: {\n          endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"end\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(IconButton, {\n            onClick: () => {\n              push('');\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(AddCircleRoundedIcon, {\n            color: \"primary\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 27\n            }\n          })), values.phones.length > 1 && /*#__PURE__*/React.createElement(IconButton, {\n            onClick: () => {\n              remove(ind);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 27\n            }\n          }, /*#__PURE__*/React.createElement(RemoveCircleRoundedIcon, {\n            color: \"primary\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }\n          })))\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    select: true,\n    name: \"gender\",\n    label: \"Gender :\",\n    variant: \"outlined\",\n    fullWidth: true,\n    as: TextField,\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => {\n          setFieldValue('gender', '');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(ClearIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }\n      })))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, genderOption.map(g => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: g.code,\n      value: g.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, g.label);\n  })), /*#__PURE__*/React.createElement(Field, {\n    select: true,\n    name: \"maritalStatus\",\n    label: \"Marital Status :\",\n    variant: \"outlined\",\n    fullWidth: true,\n    as: TextField,\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => {\n          setFieldValue('gender', '');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(ClearIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }\n      })))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, maritalStatusOption.map(g => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: g.code,\n      value: g.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, g.label);\n  })), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, JSON.stringify(values))));\n};\n\nexport default EditUserProfile;","map":{"version":3,"sources":["/home/prashant/personal/hospitalManagment/client/src/components/user/Edit.tsx"],"names":["React","Formik","Form","Field","FieldArray","TextField","MenuItem","IconButton","InputAdornment","ClearIcon","RemoveCircleRoundedIcon","AddCircleRoundedIcon","genderOption","code","label","maritalStatusOption","EditUserProfile","initialValues","name","first","last","middle","gender","emails","phones","dob","maritalStatus","console","log","values","setSubmitting","setFieldValue","push","remove","map","el","ind","endAdornment","length","g","JSON","stringify"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/interface-name-prefix */\nimport React from 'react';\nimport { Formik, Form, Field, FieldArray } from 'formik';\nimport { TextField, MenuItem, IconButton, InputAdornment } from '@material-ui/core';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport RemoveCircleRoundedIcon from '@material-ui/icons/RemoveCircleRounded';\nimport AddCircleRoundedIcon from '@material-ui/icons/AddCircleRounded';\ninterface IInitialValues {\n  name: {\n    first: string;\n    last: string;\n    middle: string;\n  };\n  gender: string;\n  emails: Array<string>;\n  phones: Array<string>;\n  dob: string;\n  maritalStatus: string;\n}\ninterface IOption {\n  code: string;\n  label: string;\n}\nconst genderOption: Array<IOption> = [\n  { code: 'f', label: 'Female' },\n  { code: 'm', label: 'Male' },\n];\nconst maritalStatusOption: Array<IOption> = [\n  { code: 's', label: 'Single' },\n  { code: 'm', label: 'Married' },\n];\nconst EditUserProfile: React.FC = function () {\n  const initialValues: IInitialValues = {\n    name: {\n      first: '',\n      last: '',\n      middle: '',\n    },\n    gender: '',\n    emails: [''],\n    phones: [''],\n    dob: '',\n    maritalStatus: '',\n  };\n  return (\n    <Formik initialValues={initialValues} onSubmit={() => console.log('submitted')}>\n      {({ values, setSubmitting, setFieldValue }) => (\n        <Form>\n          <Field type=\"text\" name=\"name.first\" label=\"First Name :\" variant=\"outlined\" fullWidth as={TextField} />\n          <Field type=\"text\" name=\"name.middle\" label=\"Middle Name :\" variant=\"outlined\" fullWidth as={TextField} />\n          <Field type=\"text\" name=\"name.last\" label=\"Last Name :\" variant=\"outlined\" fullWidth as={TextField} />\n          <FieldArray\n            name=\"emails\"\n            render={({ push, remove }) => {\n              return values.emails.map((el, ind) => (\n                <Field\n                  key={ind}\n                  type=\"email\"\n                  label={ind === 0 ? 'Emails : ' : ''}\n                  name={`emails.${ind}`}\n                  variant=\"outlined\"\n                  fullWidth\n                  as={TextField}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          onClick={(): void => {\n                            push('');\n                          }}\n                        >\n                          <AddCircleRoundedIcon color=\"primary\" />\n                        </IconButton>\n                        {values.emails.length > 1 && (\n                          <IconButton\n                            onClick={(): void => {\n                              remove(ind);\n                            }}\n                          >\n                            <RemoveCircleRoundedIcon color=\"primary\" />\n                          </IconButton>\n                        )}\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              ));\n            }}\n          />\n          <FieldArray\n            name=\"phones\"\n            render={({ push, remove }) => {\n              return values.emails.map((el, ind) => (\n                <Field\n                  key={ind}\n                  type=\"text\"\n                  label={ind === 0 ? 'Phones : ' : ''}\n                  name={`phones.${ind}`}\n                  variant=\"outlined\"\n                  fullWidth\n                  as={TextField}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          onClick={(): void => {\n                            push('');\n                          }}\n                        >\n                          <AddCircleRoundedIcon color=\"primary\" />\n                        </IconButton>\n                        {values.phones.length > 1 && (\n                          <IconButton\n                            onClick={(): void => {\n                              remove(ind);\n                            }}\n                          >\n                            <RemoveCircleRoundedIcon color=\"primary\" />\n                          </IconButton>\n                        )}\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              ));\n            }}\n          />\n\n          <Field\n            select\n            name=\"gender\"\n            label=\"Gender :\"\n            variant=\"outlined\"\n            fullWidth\n            as={TextField}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={(): void => {\n                      setFieldValue('gender', '');\n                    }}\n                  >\n                    <ClearIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          >\n            {genderOption.map((g) => {\n              return (\n                <MenuItem key={g.code} value={g.code}>\n                  {g.label}\n                </MenuItem>\n              );\n            })}\n          </Field>\n          <Field\n            select\n            name=\"maritalStatus\"\n            label=\"Marital Status :\"\n            variant=\"outlined\"\n            fullWidth\n            as={TextField}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={(): void => {\n                      setFieldValue('gender', '');\n                    }}\n                  >\n                    <ClearIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          >\n            {maritalStatusOption.map((g) => {\n              return (\n                <MenuItem key={g.code} value={g.code}>\n                  {g.label}\n                </MenuItem>\n              );\n            })}\n          </Field>\n\n          <pre>{JSON.stringify(values)}</pre>\n        </Form>\n      )}\n    </Formik>\n  );\n};\nexport default EditUserProfile;\n"]},"metadata":{},"sourceType":"module"}