{"ast":null,"code":"var _jsxFileName = \"/home/prashant/personal/hospitalManagment/client/src/components/user/Edit.tsx\";\n\n/* eslint-disable @typescript-eslint/interface-name-prefix */\nimport React from 'react';\nimport { Formik, Form, Field, FieldArray } from 'formik';\nimport { TextField, MenuItem, IconButton, InputAdornment } from '@material-ui/core';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nconst genderOption = [{\n  code: 'f',\n  label: 'Female'\n}, {\n  code: 'm',\n  label: 'Male'\n}];\nconst maritalStatusOption = [{\n  code: 's',\n  label: 'Single'\n}, {\n  code: 'm',\n  label: 'Married'\n}];\n\nconst EditUserProfile = function () {\n  const initialValues = {\n    name: {\n      first: '',\n      last: '',\n      middle: ''\n    },\n    gender: '',\n    emails: [''],\n    phones: [''],\n    dob: '',\n    maritalStatus: ''\n  };\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: () => console.log('submitted'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, ({\n    values,\n    setSubmitting,\n    setFieldValue\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"name.first\",\n    label: \"First Name :\",\n    variant: \"outlined\",\n    fullWidth: true,\n    as: TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"name.middle\",\n    label: \"Middle Name :\",\n    variant: \"outlined\",\n    fullWidth: true,\n    as: TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    name: \"name.last\",\n    label: \"Last Name :\",\n    variant: \"outlined\",\n    fullWidth: true,\n    as: TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FieldArray, {\n    name: \"emails\",\n    render: ({\n      push,\n      remove\n    }) => {\n      return values.emails.map((el, ind) => /*#__PURE__*/React.createElement(Field, {\n        key: ind,\n        type: \"email\",\n        name: `emails.${ind}`,\n        variant: \"outlined\",\n        fullWidth: true,\n        as: TextField,\n        InputProps: {\n          endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"end\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(IconButton, {\n            onClick: () => {},\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(AddCircleOutlineIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 27\n            }\n          })))\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    select: true,\n    name: \"gender\",\n    label: \"Gender :\",\n    variant: \"outlined\",\n    fullWidth: true,\n    as: TextField,\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => {\n          setFieldValue('gender', '');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(ClearIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }\n      })))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, genderOption.map(g => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: g.code,\n      value: g.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, g.label);\n  })), /*#__PURE__*/React.createElement(Field, {\n    select: true,\n    name: \"maritalStatus\",\n    label: \"Marital Status :\",\n    variant: \"outlined\",\n    fullWidth: true,\n    as: TextField,\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => {\n          setFieldValue('gender', '');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(ClearIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      })))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, maritalStatusOption.map(g => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: g.code,\n      value: g.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, g.label);\n  })), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, JSON.stringify(values))));\n};\n\nexport default EditUserProfile;","map":{"version":3,"sources":["/home/prashant/personal/hospitalManagment/client/src/components/user/Edit.tsx"],"names":["React","Formik","Form","Field","FieldArray","TextField","MenuItem","IconButton","InputAdornment","ClearIcon","AddCircleOutlineIcon","genderOption","code","label","maritalStatusOption","EditUserProfile","initialValues","name","first","last","middle","gender","emails","phones","dob","maritalStatus","console","log","values","setSubmitting","setFieldValue","push","remove","map","el","ind","endAdornment","g","JSON","stringify"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/interface-name-prefix */\nimport React from 'react';\nimport { Formik, Form, Field, FieldArray } from 'formik';\nimport { TextField, MenuItem, IconButton, InputAdornment } from '@material-ui/core';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\ninterface IInitialValues {\n  name: {\n    first: string;\n    last: string;\n    middle: string;\n  };\n  gender: string;\n  emails: Array<string>;\n  phones: Array<string>;\n  dob: string;\n  maritalStatus: string;\n}\ninterface IOption {\n  code: string;\n  label: string;\n}\nconst genderOption: Array<IOption> = [\n  { code: 'f', label: 'Female' },\n  { code: 'm', label: 'Male' },\n];\nconst maritalStatusOption: Array<IOption> = [\n  { code: 's', label: 'Single' },\n  { code: 'm', label: 'Married' },\n];\nconst EditUserProfile: React.FC = function () {\n  const initialValues: IInitialValues = {\n    name: {\n      first: '',\n      last: '',\n      middle: '',\n    },\n    gender: '',\n    emails: [''],\n    phones: [''],\n    dob: '',\n    maritalStatus: '',\n  };\n  return (\n    <Formik initialValues={initialValues} onSubmit={() => console.log('submitted')}>\n      {({ values, setSubmitting, setFieldValue }) => (\n        <Form>\n          <Field type=\"text\" name=\"name.first\" label=\"First Name :\" variant=\"outlined\" fullWidth as={TextField} />\n          <Field type=\"text\" name=\"name.middle\" label=\"Middle Name :\" variant=\"outlined\" fullWidth as={TextField} />\n          <Field type=\"text\" name=\"name.last\" label=\"Last Name :\" variant=\"outlined\" fullWidth as={TextField} />\n          <FieldArray\n            name=\"emails\"\n            render={({ push, remove }) => {\n              return values.emails.map((el, ind) => (\n                <Field\n                  key={ind}\n                  type=\"email\"\n                  name={`emails.${ind}`}\n                  variant=\"outlined\"\n                  fullWidth\n                  as={TextField}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton onClick={(): void => {}}>\n                          <AddCircleOutlineIcon />\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              ));\n            }}\n          />\n          <Field\n            select\n            name=\"gender\"\n            label=\"Gender :\"\n            variant=\"outlined\"\n            fullWidth\n            as={TextField}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={(): void => {\n                      setFieldValue('gender', '');\n                    }}\n                  >\n                    <ClearIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          >\n            {genderOption.map((g) => {\n              return (\n                <MenuItem key={g.code} value={g.code}>\n                  {g.label}\n                </MenuItem>\n              );\n            })}\n          </Field>\n          <Field\n            select\n            name=\"maritalStatus\"\n            label=\"Marital Status :\"\n            variant=\"outlined\"\n            fullWidth\n            as={TextField}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={(): void => {\n                      setFieldValue('gender', '');\n                    }}\n                  >\n                    <ClearIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          >\n            {maritalStatusOption.map((g) => {\n              return (\n                <MenuItem key={g.code} value={g.code}>\n                  {g.label}\n                </MenuItem>\n              );\n            })}\n          </Field>\n\n          <pre>{JSON.stringify(values)}</pre>\n        </Form>\n      )}\n    </Formik>\n  );\n};\nexport default EditUserProfile;\n"]},"metadata":{},"sourceType":"module"}